name: docker-build-release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  PLATFORMS: linux/amd64,linux/arm64,linux/arm/v6

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: context
        id: context
        run: |
          images=ghcr.io/zero88/gh-registry
          [[ ${{ startsWith(github.ref, 'refs/tags/v') }} == true ]] && images=$images,zero88/gh-registry
          echo ::set-output name=isRelease::${{ startsWith(github.ref, 'refs/tags/v') }}
          echo ::set-output name=baseVersion::$(cat version.txt)
          echo ::set-output name=images::$images

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${{ steps.context.outputs.images }}
          tag-latest: true
          tag-sha: true
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: ${{ steps.context.outputs.isRelease == 'true' }}
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.OSS_GHA_DOCKER_HUB }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.OSS_GITHUB_TOKEN }}

      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: ${{ env.PLATFORMS }}
          build-args: |
            BASE_IMAGE_VERSION=${{ steps.context.outputs.baseVersion }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true

      - name: Create Release
        if: ${{ steps.context.outputs.isRelease == 'true' }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.context.outputs.baseVersion }}
          name: Release v${{ steps.context.outputs.baseVersion }}
          draft: false
          prerelease: false
